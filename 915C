#include <iostream>

using namespace std;

size_t digit_distributor64(long long x, char* aRr)
{
	size_t length = 0;
	for (char i = 0; i < 19; ++i)
	{
		aRr[i] = x % 10;
		if (!(x /= 10))
		{
			length = ++i;
			for (; i < 19; ++i)
				aRr[i] = 0;
		}
	}
	return length;
}

size_t digit_distributor10(long long x, char* aRr)
{
	size_t length = 0;
	for (char i = 0; i < 10; ++i)
	{
		aRr[i] = 0;
	}
	for (char i = 0; ; ++i)
	{
		++aRr[x % 10];
		if (!(x /= 10))
		{
			length = i + 1;
			break;
		}
	}
	return length;
}

bool crit(const char* aRr, char x)
{
	bool t = false;
	for (; --x >= 0;)
	{
		if (t = aRr[x])
			break;
	}
	return t;
}

int main()
{
	long long a, b;

	cin >> a >> b;

	char *aRrA = new char[10], *aRrB = new char[19];

	char La = digit_distributor10(a, aRrA), Lb = digit_distributor64(b, aRrB);

	char *aRrA2 = new char[10];
	digit_distributor10(a, aRrA2);

	if (La > Lb)
		aRrA[0] -= La - Lb;
	for (char i = 0; i < La - Lb; ++i)
		cout << 0;

	if (La >= Lb)
	{
		char lasTdano;

		for (char i = Lb - 1; i >= 0; --i)
		{
			if (crit(aRrA2, aRrB[i]))
				lasTdano = i;
			if (aRrA2[aRrB[i]])
			{
				if(i == 0)
					lasTdano = i;
				--aRrA2[aRrB[i]];
				//cout << +aRrB[i] << '-' << +aRrA2[aRrB[i]] << '\n';
			}
			else
				break;
		}

		//cout << +lasTdano << '\n';

		for (char i = Lb - 1; i > lasTdano; --i)
		{
			cout << +aRrB[i];
			--aRrA[aRrB[i]];
		}

		for (char i = aRrB[lasTdano] - 1; i >= 0; --i)
			if (aRrA[i])
			{
				--aRrA[i];
				cout << +i;
				break;
			}
	}

	for (char i = 9; i >= 0; --i)
		for (char k = 0; k < aRrA[i]; ++k)
			cout << +i;

	//system("pause");
}
